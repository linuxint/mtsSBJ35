##################################################
# 0. Application 개발환경 설정
##################################################
spring.devtools.livereload.enabled=true
spring.devtools.thymeleaf.cache=false
spring.devtools.restart.enabled=true

##################################################
# 0. Application 정보 및 메타데이터 설정
##################################################
# 애플리케이션 이름 및 버전 정보 설정
spring.application.name=mtsSBJ35
application.title=MTS
application.version=1.0
application.formatted-version=1.0

# 애플리케이션 연락처 정보
info.contact.mail=linuxint@gmail.com
info.contact.phone=+82

# 애플리케이션 빌드 정보
info.build.artifact=@project.artifactId@
info.build.name=@project.name@
info.build.description=@project.description@
info.build.version=@project.version@
info.build.properties.java.version=@java.version@

# 애플리케이션 추가 정보 (주석 처리된 경우 필요 시 활성화)
# info.app.name=@application.title@
# info.app.description=@project.description@
# info.app.version=@application.version@

# 로깅에 애플리케이션 이름 포함 여부
logging.include-application-name=false

spring.banner.location=classpath:/mts-banner.txt
#custom banner image
#spring.banner.image.location=classpath:banner.jpg
#spring.banner.image.width=가로사이즈(100이면 원본 이미지 사이즈)
#spring.banner.image.height=세로사이즈
#spring.banner.image.margin=여백
#spring.banner.image.invert=인버터(1이면 반전)

##################################################
# 0. Application 로직설정
##################################################

##################################################
# Git/GitHub Configuration
##################################################
# GitHub settings
github.token=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
github.username=linuxint@gmail.com
github.repository=linuxint/mtsSBJ35

# Git user settings
git.username=linuxint@gmail.com
git.email=linuxint@gmail.com
# batch
batch.indexingFile.cron=0 */1 * * * ?
batch.indexing.host=bluedigm.local
batch.indexing.file_ext=doc,ppt,xls,docx,pptx,xlsx,pdf,txt,zip,hwp
# 네이버지도 키
naver.api.clientid=h3w7hh4o7f
naver.api.clientsecret=jL786lvIt5WCO7p3AuszGmvMdcKwjB0oFFyVMRcu

openai.api.key=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

##################################################
# 1. Spring Custom 설정
##################################################
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#스프링부트 2.6.x 부터는 순환참조 (circular reference)가 금지
spring.main.allow-circular-references=true

####### messages manipulation
#spring.messages.basename=message/message,message/message2
spring.messages.basename=classpath:/messages/message
#spring.messages.basename=classpath*:/message/com/**/*
spring.messages.encoding=UTF-8
spring.messages.fallback-to-system-locale=false
spring.messages.reload-second=60
#spring.messages.cache-duration=60
#spring.messages.fallback-to-system-locale=false
spring.messages.fallbackToSystemLocale=false
spring.messages.alwaysUseMessageFormat=true

spring.resources.cache.cachecontrol.duration=1

##################################################
# 1. Server 관련 설정
##################################################
server.port.http=9090

# 서버의 안전한 종료를 위한 설정
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=1m
# 서버 압축 활성화
server.compression.enabled=true
server.indexPage=index.jsp

#### Tomcat 관련 설정 ####
server.tomcat.file-encoding=UTF-8
server.tomcat.uri-encoding=UTF-8
# Tomcat AJP 관련 설정
tomcat.ajp.protocol=AJP/1.3
tomcat.ajp.port=8109
tomcat.ajp.enable=true
tomcat.ajp.schema=http
tomcat.ajp.secure=false
tomcat.ajp.allowtrace=false
tomcat.ajp.secretrequired=false

#### Jetty 관련 설정 ####
server.jetty.threads.max=200
server.jetty.threads.min=10
# Jetty의 스레드 유휴 시간 설정 (밀리초)
server.jetty.threads.idle-timeout=300000

#### Servlet 관련 설정 ####
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
# JSP 초기 매핑 파일 설정
server.servlet.jsp.init-parameters.mappedfile=false
server.servlet.jsp.init-parameters.development=true
#server.servlet.session.timeout=30m
spring.servlet.multipart.maxFileSize=50MB
spring.servlet.multipart.maxRequestSize=50MB

##################################################
# 2. SSL 및 Context 경로 설정
##################################################
# HTTPS 관련 설정 (주석 처리, 필요 시 활성화)
# server.ssl.client-auth=none
# server.ssl.enabled-protocols=TLSv1.2
# server.ssl.key-store-type=PKCS12
# server.ssl.key-store=classpath:keystore/sbip.p12
# server.ssl.key-store-password=p@ssw0rd
# server.ssl.key-alias=sbip

# 컨텍스트 경로 설정 (필요 시 활성화)
# server.servlet.context-path=/mts


##################################################
# 3. 오류 처리 및 Error 설정
##################################################
# 응답 시 예외 내용을 포함할지 여부
server.error.include-exception=true
# 응답 시 StackTrace 포함 여부
server.error.include-stacktrace=always
# 에러 발생 시 처리 경로 지정, 기본값: /error
server.error.path=/error/
# Spring Boot 기본 오류 페이지 사용 여부
server.error.whitelabel.enabled=false
# 응답 바인딩된 에러 포함 여부 (기본값: NEVER)
server.error.include-binding-errors=never
# 응답 메시지 포함 여부 (기본값: NEVER)
server.error.include-message=never

##################################################
# 4. Spring Session 관련 설정
##################################################
# 세션 저장소를 JDBC로 사용
spring.session.store-type=jdbc
# JDBC 세션 생성 시 초기화 설정
spring.session.jdbc.initialize-schema=always
# 사용할 JDBC 세션 테이블 이름
spring.session.jdbc.table-name=SPRING_SESSION

##################################################
# 5. Cache Configuration
# Cache Configuration
spring.cache.type=caffeine
spring.cache.cache-names=boardNotices,boardList,boardDetail
spring.cache.caffeine.spec=initialCapacity=100,maximumSize=1000,expireAfterWrite=30m,recordStats

# Cache-specific configurations
spring.cache.caffeine.boardNotices.spec=maximumSize=50,expireAfterWrite=60m,recordStats
spring.cache.caffeine.boardList.spec=maximumSize=200,expireAfterWrite=15m,recordStats
spring.cache.caffeine.boardDetail.spec=maximumSize=100,expireAfterWrite=30m,recordStats

# Cache Monitoring
management.metrics.enable.cache=true
management.metrics.enable.caffeine=true

# 6. DataSource 및 MyBatis 관련 설정
##################################################
mybatis.mapper-locations=classpath:mapper/oracle/*.xml

### DataSource 설정 ###
# Database 연결 URL 정보
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
# 데이터베이스 사용자명
# spring.datasource.username=mts
# 데이터베이스 비밀번호
# spring.datasource.password=mts
# JDBC 드라이버 클래스 이름
# spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

### HikariCP 관련 설정 ###
# HikariCP Connection Pool Driver 설정
# spring.datasource.hikari.driver-class-name=oracle.jdbc.OracleDriver
# JDBC URL
# spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@localhost:1521:XE
# 사용자명
# spring.datasource.hikari.username=mts
# 비밀번호
# spring.datasource.hikari.password=mts
# Connection Pool 최대 크기 설정
# spring.datasource.hikari.maximum-pool-size=8
# 최소 Idle 커넥션 수 설정
# spring.datasource.hikari.minimum-idle=8
# Idle Timeout 설정 (밀리초)
# spring.datasource.hikari.idle-timeout=300000
# Max Lifetime 설정 (밀리초)
# spring.datasource.hikari.max-lifetime=900000
# Connection Timeout (밀리초)
# spring.datasource.hikari.connection-timeout=50000
# 커넥션 테스트 쿼리
# spring.datasource.hikari.connection-test-query=select 1 from dual
# spring.datasource.hikari.auto-commit=false

### MyBatis 설정 ###
# MyBatis Config 설정 파일 경로
# mybatis.config-location=MyBatisConfig.xml
# MyBatis에서 사용할 Type Alias Package 설정
# mybatis.type-aliases-package=com.cusonar.example.home.domain,com.cusonar.example.user.domain
#mybatis.type-aliases-package = com.example.project.mapper
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.jdbc-type-for-null=null
mybatis.configuration.cache-enabled=false

### 멀티 커넥션 설정 ###

#app.datasource.ds1.username=mts
#app.datasource.ds1.password=mts
#app.datasource.ds1.connection-timeout=50000
#app.datasource.ds1.idle-timeout=300000
#app.datasource.ds1.max-lifetime=900000
#app.datasource.ds1.maximum-pool-size=8
#app.datasource.ds1.minimum-idle=8
#app.datasource.ds1.pool-name=MyPoolDS1
#app.datasource.ds1.connection-test-query=select 1 from dual
#app.datasource.ds1.url=jdbc:p6spy:oracle:thin:@localhost:1521:XE
#app.datasource.ds1.driver-class-name=com.p6spy.engine.spy.P6SpyDriver

#app.datasource.ds2.username=mts
#app.datasource.ds2.password=mts
#app.datasource.ds2.connection-timeout=50000
#app.datasource.ds2.idle-timeout=300000
#app.datasource.ds2.max-lifetime=900000
#app.datasource.ds2.maximum-pool-size=8
#app.datasource.ds2.minimum-idle=8
#app.datasource.ds2.pool-name=MyPoolDS1
#app.datasource.ds2.connection-test-query=select 1 from dual
#app.datasource.ds2.url=jdbc:p6spy:oracle:thin:@localhost:1521:XE
#app.datasource.ds2.driver-class-name=com.p6spy.engine.spy.P6SpyDriver

#mysql
#spring.datasource.mysql.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.mysql.url=jdbc:mariadb://localhost/mts?useUnicode=true&amp;characterEncoding=UTF-8
#spring.datasource.mysql.username=mts
#spring.datasource.mysql.password=mts
#mybatis.mysql.config-locations=classpath:mybatis-config.xml
#mybatis.mysql.mapper-locations=classpath:mapper/mysql/*.xml
#postgresql
#spring.datasource.pgsqlds.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.pgsqlds.url=jdbc:mariadb://localhost/mts?useUnicode=true&amp;characterEncoding=UTF-8
#spring.datasource.pgsqlds.username=mts
#spring.datasource.pgsqlds.password=mts
#mybatis.pgsqlds.config-locations=classpath:mybatis-config.xml
#mybatis.pgsqlds.mapper-locations=classpath:mapper/pgsqlds/*.xml
#oracle
#spring.jpa.hibernate.entity_manager_factory_interface=jakarta.persistence.EntityManagerFactory
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
#spring.jpa.hibernate.show-sql=true
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
# Hibernate 모듈 크롤링 방지
#spring.jpa.properties.hibernate.allow_crawling=false
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.ejb.metamodel.population.enabled=enabled


##################################################
# 6. Spring MVC 및 Thymeleaf 설정
##################################################
### JSP 설정 ###
# View 파일 경로 설정 (JSP)
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

### Thymeleaf 설정 ###
# 템플릿 경로 및 캐시 관련 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.view-names=thymeleaf/*
spring.thymeleaf.mode=HTML
spring.thymeleaf.order=0
spring.thymeleaf.encoding=UTF-8

### Spring MVC 패스매칭 및 리소스 설정 ###
# 경로 매칭 전략 (ANT_PATH_MATCHER)
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
spring.web.resources.add-mapping=true
spring.web.mvc.throw-exception-if-no-handler-found=true

##################################################
# 7. Static Path 및 리소스 설정
##################################################
####### image manipulation
#image.root.path=/images
#image.default.path=/default

# 기본적으로 포함된 리소스 경로 정보 (주석)
# classpath:/static
# classpath:/public
# classpath:/resources/
# classpath:/META-INF/resources

# 정적 리소스 파일 사용자 정의 경로
# spring.web.resources.static-locations=classpath:/resources/static/
# Spring MVC 정적 경로 패턴
# spring.mvc.static-path-pattern=/static/**

##################################################
# 8. Tomcat AJP 설정
##################################################
server.tomcat.connection-timeout=200000
server.tomcat.max-connections=200
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10
server.tomcat.accept-count=100
server.tomcat.max-swallow-size=-1
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=work/log/access
logging.level.org.springframework=INFO
logging.level.org.apache=WARN

##################################################
# 9. 로그,ANSI,P6Spy 출력 관련 설정
##################################################
# ANSI 컬러 출력 활성화
spring.output.ansi.enabled=always
# SQL 로그가 저장될 파일 경로
p6spy.config.logfile=logs/p6spy_sql.log
# 지정된 동작을 로그에서 제외 (commit, rollback 제외)
p6spy.config.exclude=commit,rollback
# 'select' SQL 문만 기록
p6spy.config.include=select

##################################################
# 10. CORS(Cross-Origin Resource Sharing) 설정
##################################################
# 애플리케이션에서 허용할 CORS의 Origin 목록
app.cors.allowed-origins=http://localhost:18080,http://localhost:9090
logging.level.p6spy=info
logging.level.org.apache.catalina=DEBUG
logging.level.org.apache.tomcat=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari=DEBUG

# Logging Configuration
logging.level.org.springframework.boot.actuate=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.com.devkbil.mtssbj.actuator=DEBUG

#logging.file.name=work/log/catalina.out
#logging.file.path=work/log/

# Spring Actuator의 관리 엔드포인트에 대한 허용할 CORS Origin
management.endpoints.web.cors.allowed-origins=http://localhost:18080,http://localhost:9090

#Structured logging
logging.structured.format.console=ecs
logging.structured.format.file=ecs
#logging.file.name=log.json

#logging.structured.ecs.service.name=mtsSBJ35
#logging.structured.ecs.service.version=1
#logging.structured.ecs.service.environment=Production
#logging.structured.ecs.service.node-name=Primary
#logging.structured.format.console=com.devkbil.mtssbj.common.log.MyStructuredLoggingFormatter

##################################################
# 21. 쿼리포멧/늦은쿼리 확인 설정
##################################################
flexy-pool.enabled=true
# Flexy Pool 로깅 이름 설정
flexy-pool.metrics.logger-name=flexy-pool
# 최대 연결 풀 크기 설정
flexy-pool.max-pool-size=50
# 모니터링 대상 데이터소스 이름 정의
flexy-pool.datasource-name=MyDataSource
# 메트릭 로깅 주기 설정(1분)
flexy-pool.metrics.report-interval=1m
flexy-pool.adaptor=com.vladmihalcea.flexypool.adaptor.HikariCPPoolAdapter

### 늦은 쿼리 로깅 관련
# 데이터베이스 쿼리 로깅 활성화
datasource-proxy.logging=true
# 쿼리 로깅 활성화
datasource-proxy.query.enable-logging=true
# 쿼리 로깅 레벨 설정
datasource-proxy.query.log-level=INFO

#p6spy query logging
p6spy.config.logMessageFormat=com.p6spy.engine.spy.appender.CustomLineFormat
p6spy.config.customLogMessageFormat=%(currentTime)|%(executionTime)|%(category)|connection%(connectionId)|%(sqlSingleLine)

decorator.datasource.p6spy.enable-logging=true
decorator.datasource.p6spy.multiline=true
decorator.datasource.p6spy.logging=slf4j
# Class file to use (only with logging=custom). The class must implement com.p6spy.engine.spy.appender.FormattedLogger
decorator.datasource.p6spy.custom-appender-class=my.custom.LoggerClass
# Custom log format, if specified com.p6spy.engine.spy.appender.CustomLineFormat will be used with this log format
decorator.datasource.p6spy.log-format=
# Use regex pattern to filter log messages. If specified only matched messages will be logged.
decorator.datasource.p6spy.log-filter.pattern=

decorator.datasource.datasource-proxy.logging=slf4j
decorator.datasource.datasource-proxy.query.enable-logging=true
decorator.datasource.datasource-proxy.query.log-level=debug
decorator.datasource.datasource-proxy.query.logger-name=
decorator.datasource.p6spy.log-file=spy.log

decorator.datasource.datasource-proxy.slow-query.enable-logging=true
decorator.datasource.datasource-proxy.slow-query.log-level=warn
decorator.datasource.datasource-proxy.slow-query.logger-name=

decorator.datasource.datasource-proxy.slow-query.threshold=300
decorator.datasource.datasource-proxy.multiline=true
decorator.datasource.datasource-proxy.json-format=false
decorator.datasource.datasource-proxy.count-query=false

# Increments pool size if connection acquisition request has timed out
decorator.datasource.flexy-pool.acquisition-strategy.increment-pool.max-overgrow-pool-size=15
decorator.datasource.flexy-pool.acquisition-strategy.increment-pool.timeout-millis=500
# Retries on getting connection
decorator.datasource.flexy-pool.acquisition-strategy.retry.attempts=2
# Enable metrics exporting to the JMX
decorator.datasource.flexy-pool.metrics.reporter.jmx.enabled=true
decorator.datasource.flexy-pool.metrics.reporter.jmx.auto-start=false
# Millis between two consecutive log reports
decorator.datasource.flexy-pool.metrics.reporter.log.millis=300000
# Enable logging and publishing ConnectionAcquisitionTimeThresholdExceededEvent when a connection acquisition request has timed out
decorator.datasource.flexy-pool.threshold.connection.acquisition=50
# Enable logging and publishing ConnectionLeaseTimeThresholdExceededEvent when a connection lease has exceeded the given time threshold
decorator.datasource.flexy-pool.threshold.connection.lease=1000

##################################################
# 22. spring doc api 설정
##################################################
springdoc.version='@springdoc.version@'
springdoc.packages-to-scan=com.devkbil.mtssbj
springdoc.cache.disabled=true
springdoc.model-and-view-allowed=true
springdoc.show-actuator=true
springdoc.swagger-ui.path=/apidoc/index.html
springdoc.swagger-ui.groups-order=ASC
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.syntax-highlight.theme=flattop
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.doc-expansion=none
springdoc.api-docs.path=/apidoc
springdoc.api-docs.groups.enabled=true

##################################################
# 31. 연계 설정 - spring boot server admin
##################################################
# Actuator 엔드포인트 활성화 (metrics 엔드포인트 포함)
#management.endpoints.web.exposure.include=*,sbom,metrics,prometheus,logfile
#management.endpoints.web.exposure.include=*,sbom,prometheus,logfile,mappings,beans,shutdown,env,configprops,dependencies,health,metrics,heapdump,threaddump,sessions,auditevents,inf,conditions,startup,features
management.endpoints.web.exposure.include=*,health,metrics,heapdump,threaddump,sessions,auditevents,info,conditions,startup,features
#management.endpoints.enabled-by-default=true
#management.endpoint.shutdown.enabled=true
management.endpoint.mappings.access=unrestricted
management.endpoint.sbom.access=unrestricted
management.actuators.enabled-by-default=false
management.endpoint.health.show-components=always
spring.boot.actuate.sbom.optional=true

# Logfile 엔드포인트 경로 설정 (필요시)
management.logging.export.enabled=true
management.endpoint.logfile.external-file=./logs_local/mts_local.log,./logs_local/mts_local_BATCH.log
management.endpoint.health.show-details=always
management.endpoint.health.status.order=FATAL,DOWN,OUT-OF-SERVICE,UNKNOWN,UP
management.endpoint.health.status.http-mapping.down=500
management.endpoint.health.status.http-mapping.out_of_service=503
management.endpoints.web.base-path=/actuator
management.endpoints.web.path-mapping.health=healthcheck
management.health.elasticsearch.enabled=false

management.endpoint.sbom.additional.jvm.media-type=application/json
management.endpoint.sbom.additional.jvm.location=classpath:jvm-sbom.json
management.endpoint.sbom.additional.application.media-type=application/json
management.endpoint.sbom.additional.application.location=classpath:application-sbom.json

management.info.defaults.enabled=true
management.info.build.enabled=true
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true
management.info.git.enabled=true
management.info.git.mode=full

##################################################
# 41. 연계 프로그램 설정 - spring boot server admin
##################################################
spring.boot.admin.client.instance.service-url=http://localhost:9090
spring.boot.admin.client.instance.server-url=http://localhost:9090
#spring.boot.admin.client.instance.service-url=https://localhost:8443
#spring.boot.admin.client.instance.server-url=https://localhost:8443
spring.boot.admin.client.url=http://localhost:18080
spring.boot.admin.url=http://localhost:18080
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin
spring.boot.admin.client.instance.metadata.user.name=admin
spring.boot.admin.client.instance.metadata.user.password=admin
spring.boot.admin.client.instance.name=mtsSBJ35
spring.boot.admin.client.enabled=true

##################################################
# 42. 연계 프로그램 설정 - Prometheus
##################################################

# Prometheus 메트릭을 제공할 URL 설정
management.prometheus.metrics.export.enabled=true
# Prometheus에 데이터를 수집할 간격 (30초)
management.prometheus.metrics.export.step=30s
# Prometheus 엔드포인트 활성화

##################################################
# 43. 연계 프로그램 설정 - flyway
##################################################

##flyway
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
#spring.flyway.url=jdbc:oracle:thin:@localhost:1521:XE
#spring.flyway.user=mts
#spring.flyway.password=mts
#spring.flyway.locations=classpath:/db/migration
#spring.flyway.sql-migration-suffixes=ddl

##################################################
# 44. 연계 프로그램 설정 - elasticsearch
##################################################

# elasticsearch
spring.elasticsearch.uris=http://localhost:9200
spring.elasticsearch.username=elastic
spring.elasticsearch.password=manager

elasticsearch.scheme=http
elasticsearch.host=localhost
elasticsearch.port=9200
elasticsearch.clustername=mts
elasticsearch.credentials.id=elastic
elasticsearch.credentials.passwd=manager
elasticsearch.version=7.17.6

##################################################
# 45. 연계 프로그램 설정 - Zipkin, sleuth
##################################################
# Zipkin 서버 설정 (Zipkin 서버가 설정되어 있으면 이곳에 설정)
spring.zipkin.base-url=http://localhost:9411/
spring.sleuth.web.client.enabled=true
spring.sleuth.web.enabled=true
# Sleuth 설정 (트레이싱 활성화)
# 모든 요청에 대해 트레이싱을 수행하도록 설정
spring.sleuth.sampler.probability=1.0

spring.sleuth.traceId128=true
spring.sleuth.supportsJoin=false
spring.sleuth.propagation.type=w3c,b3

#management.metrics.export.<registry>.enabled=false
#management.defaults.metrics.export.enabled=false

#management.tracing.sampling.probability=1.0
#management.tracing.propagation.consume=b3
#management.tracing.propagation.produce=b3_multi
#management.zipkin.tracing.endpoint="http://localhost:9090/api/v2/spans"

##################################################
# 99. 미정렬 항목
##################################################