spring:
  profiles:
    active: local # 기본 환경을 local로
    group:
      local:
        - common
      dev:
        - common
      stag:
        - common
      prod:
        - common
  session:
    jdbc:
      initialize-schema: always  # 스키마 자동 생성
      table-name: SPRING_SESSION  # 테이블 이름 설정
      schema: classpath:org/springframework/session/jdbc/schema-oracle.sql  # Oracle 스키마 스크립트 위치

# 천문과학원 API 설정
# 공공데이터포털 API 설정
data:
  go:
    kr:
      api:
        domain: http://apis.data.go.kr
        serviceKey: 6W%2Bvw4jgc6ITVy4FPwAV%2FIzu45%2FciBi%2Bf4ZQBy1CF7DWc0tDNX9NpCuoGLhUr%2FNQVeV9xzu0K%2FDcznvJ4Ooxcw%3D%3D
        holidayservice: /B090041/openapi/service/SpcdeInfoService/getRestDeInfo
        lunarservice: /B090041/openapi/service/LrsrCldInfoService/getLunCalInfo


--- #--------------------------------- common
spring:
  config:
    activate:
      on-profile: common # application-common.yml properties
  pulsar:
    client:
      service-url: pulsar://localhost:6650
    producer:
      topic-name: logs

--- #--------------------------------- local
spring:
  config:
    activate:
      on-profile: local

  #cache:
  #  type: redis
  #data:
  #  redis:
  #    host: localhost
  #    port: 6379

  datasource:
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    url: jdbc:p6spy:oracle:thin:@localhost:1521:XE
    username: mts
    password: mts
    pool-initial-size: 5
    pool-max-size: 10
    connection-idle-limit-in-seconds: 300
    validate-timeout-in-seconds: 5
    test-connection-query: "SELECT 1 FROM DUAL"
    log-query-execution-longer-than-ms: 1000
    log-stack-trace-for-long-query-execution: false
    statement-cache-max-size: 200
    use-fast-failure: true
  #sql:
  #    init:
  #      schema-locations:
  #        - file:/database/Common/ddl/oracle/table.sql
  #      data-locations:
  #        - file:/database/Common/dml/oracle/tableData_oracle.sql

# local 프로필 로깅 설정
logging:
  level:
    org:
      apache:
        catalina: DEBUG
        tomcat: DEBUG
    com:
      devkbil:
        mtssbj:
          schedule: DEBUG
  file:
    name: work/log/catalina.out
    path: work/log/

server:
  port: 9090
  #port: 8443
  tomcat:
    basedir: ./
    accesslog:
      enabled: true
      directory: work/log/access
  servlet:
    jsp:
      init-parameters:
        mappedfile: false #자동 generated
        trimWhitespace: true # 공백 제거

#  jpa:
#    hibernate:
#      ddl-auto: create
##      use-new-id-generator-mappings: false
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#    generate-ddl: true
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
#      hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect

--- #--------------------------------- dev
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true

server:
  port: 8081

--- #--------------------------------- stag
spring:
  config:
    activate:
      on-profile: stag
  jpa:
    hibernate:
      ddl-auto: none
server:
  port: 8082

--- #--------------------------------- prod
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    hibernate:
      ddl-auto: none
server:
  port: 8083
management:
  health:
    elasticsearch:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,heapdump
      base-path: /actuator
  endpoint:
    heapdump:
      access: unrestricted
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:
        http.server.requests: 10ms, 50ms, 100ms, 200ms, 500ms

  application:
    name: mtsSBJ35
  sleuth:
    otel:
      config:
        trace-id-ratio-based: 1.0
      exporter:
        otlp:
          url: http://localhost:4317
    zipkin:
      tracing:
        endpoint: http://localhost:9411/api/v2/spans
      base-url: http://localhost:9411

logging:
  level:
    org.springframework.web: INFO
    io.micrometer: DEBUG
    org.springframework.sleuth: DEBUG