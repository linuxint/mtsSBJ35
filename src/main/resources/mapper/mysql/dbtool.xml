<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dbtool">

    <select id="selectTableData" parameterType="map" resultType="map">
        SELECT
        <foreach collection="columns" item="column" separator=",">
            ${column}
        </foreach>
        FROM ${tableName}
    </select>

    <select id="checkExistingData" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM ${tableName}
        WHERE
        <foreach collection="keyColumns" item="keyColumn" separator=" AND ">
            ${keyColumn} = #{keyValues[keyColumn]}
        </foreach>
    </select>

    <update id="dynamicUpdate">
        UPDATE ${tableName}
        <set>
            <foreach collection="columns" item="column" separator=",">
                ${column} = #{data[column]}
            </foreach>
        </set>
        WHERE
        <foreach collection="keyColumns" item="keyColumn" separator=" AND ">
            ${keyColumn} = #{data[keyColumn]}
        </foreach>
    </update>

    <insert id="dynamicInsert">
        INSERT INTO ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="columns" item="column" separator=",">
                ${column}
            </foreach>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="columns" item="column" separator=",">
                #{data[column]}
            </foreach>
        </trim>
    </insert>

    <select id="selectTableLayout" resultType="com.devkbil.mtssbj.develop.dbtool.DbtoolVO" parameterType="com.devkbil.mtssbj.develop.dbtool.DbtoolVO">
        <![CDATA[
        SELECT A1.TABLE_NAME AS tableName,
                A1.TABLE_COMMENTS AS tableComments,
                A1.COLUMN_COMMENTS AS columnComments,
                A1.COLUMN_NAME AS columnName,
                A1.COLUMN_ID as columnId,
                MAX(CASE WHEN B1.CONSTRAINT_TYPE = 'P' THEN B1.CONSTRAINT_NAME ELSE NULL END) AS pkFlag, -- PK 플래그
                MAX(CASE WHEN B1.CONSTRAINT_TYPE = 'R' THEN CONCAT(B1.CONSTRAINT_NAME, '->', B1.R_CONSTRAINT_NAME, '.', A1.COLUMN_NAME) ELSE NULL END) AS fkFlag, -- FK 플래그
                A1.NULL_FLAG AS nullFlag,
                A1.DATA_TYPE AS dataType,
                A1.DATA_LENGTH AS dataLength
            FROM
                (SELECT
                     B.TABLE_COMMENT AS TABLE_COMMENTS,
                     A.TABLE_NAME AS TABLE_NAME,
                     C.COLUMN_COMMENT AS COLUMN_COMMENTS,
                     A.COLUMN_NAME AS COLUMN_NAME,
                     CASE
                          WHEN A.IS_NULLABLE = 'YES' THEN ''
                          WHEN A.IS_NULLABLE = 'NO' THEN 'NOT NULL'
                     END AS NULL_FLAG,
                     A.DATA_TYPE AS DATA_TYPE,
                     (CASE
                          WHEN A.DATA_TYPE IN ('CHAR', 'VARCHAR') THEN CONCAT('(', A.CHARACTER_MAXIMUM_LENGTH, ')')
                          WHEN A.DATA_TYPE = 'DECIMAL' AND A.NUMERIC_SCALE = 0 AND A.NUMERIC_PRECISION IS NOT NULL THEN CONCAT('(', A.NUMERIC_PRECISION, ')')
                          WHEN A.DATA_TYPE = 'DECIMAL' AND A.NUMERIC_SCALE <> 0 THEN CONCAT('(', A.NUMERIC_PRECISION, ',', A.NUMERIC_SCALE, ')')
                          ELSE ''
                     END) AS DATA_LENGTH,
                     A.ORDINAL_POSITION AS COLUMN_ID
                 FROM INFORMATION_SCHEMA.COLUMNS A
                     LEFT JOIN INFORMATION_SCHEMA.TABLES B ON (A.TABLE_NAME = B.TABLE_NAME AND A.TABLE_SCHEMA = B.TABLE_SCHEMA)
                     LEFT JOIN INFORMATION_SCHEMA.COLUMNS C ON (A.TABLE_NAME = C.TABLE_NAME AND A.COLUMN_NAME = C.COLUMN_NAME AND A.TABLE_SCHEMA = C.TABLE_SCHEMA)
                    WHERE A.TABLE_SCHEMA = DATABASE()
                ) A1
                    LEFT JOIN
                (SELECT A.TABLE_NAME,
                         A.COLUMN_NAME,
                         B.CONSTRAINT_TYPE,
                         B.CONSTRAINT_NAME,
                         B.R_CONSTRAINT_NAME
                     FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE A
                         JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS B
                         ON (A.CONSTRAINT_NAME = B.CONSTRAINT_NAME AND A.TABLE_SCHEMA = B.TABLE_SCHEMA)
                     WHERE B.CONSTRAINT_TYPE IN ('PRIMARY KEY', 'FOREIGN KEY') AND A.TABLE_SCHEMA = DATABASE()
                ) B1 ON (A1.TABLE_NAME = B1.TABLE_NAME AND A1.COLUMN_NAME = B1.COLUMN_NAME)
            WHERE 1=1
        ]]>
        <if test="columnComments!=null and columnComments!=''">
            AND A1.COLUMN_COMMENTS LIKE CONCAT('%', #{columnComments}, '%')
        </if>
        <if test="columnName!=null and columnName!=''">
            AND A1.COLUMN_NAME LIKE CONCAT('%', #{columnName}, '%')
        </if>
        <if test="tableName!=null and tableName!=''">
            AND A1.TABLE_NAME = #{tableName}
        </if>
        GROUP BY
        A1.TABLE_NAME, A1.TABLE_COMMENTS, A1.COLUMN_COMMENTS, A1.COLUMN_NAME, A1.NULL_FLAG, A1.DATA_TYPE, A1.DATA_LENGTH, A1.COLUMN_ID
        ORDER BY A1.TABLE_NAME, A1.COLUMN_ID
    </select>

</mapper>
